  apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: karpenter
      meta.helm.sh/release-namespace: karpenter
    creationTimestamp: "2023-03-28T09:33:37Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: karpenter
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: karpenter
      app.kubernetes.io/version: 0.27.0
      helm.sh/chart: karpenter-v0.27.0
    name: karpenter
    namespace: karpenter
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: karpenter
        app.kubernetes.io/name: karpenter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/settings: e23d4a57905ce616e7422eaf5ae02885d908810a2d05046420623bd7df6b5215
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: karpenter
          app.kubernetes.io/name: karpenter
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: karpenter.sh/provisioner-name
                  operator: DoesNotExist
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - karpenter
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: KUBERNETES_MIN_VERSION
            value: 1.19.0-0
          - name: KARPENTER_SERVICE
            value: karpenter
          - name: WEBHOOK_PORT
            value: "8443"
          - name: METRICS_PORT
            value: "8080"
          - name: HEALTH_PROBE_PORT
            value: "8081"
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: controller
                divisor: "0"
                resource: limits.memory
          image: public.ecr.aws/karpenter/controller:v0.27.0@sha256:db45f56bf4730b77a38e39f097edce4ddba899b83981511bc0f227ba270d744e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: controller
          ports:
          - containerPort: 8080
            name: http-metrics
            protocol: TCP
          - containerPort: 8081
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https-webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: karpenter
        serviceAccountName: karpenter
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: karpenter
              app.kubernetes.io/name: karpenter
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
